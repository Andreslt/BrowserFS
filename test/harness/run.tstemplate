/// <reference path="../../typings/index.d.ts" />
/**
 * The template from which `run.ts` is generated.
 *
 * Why autogenerate run.ts?
 * - Avoids hardcoding all test names. Now, adding a new test case is as simple as
 *   dropping a new file into the repository.
 * - Avoids hardcoding all backend factory names. (Ditto.)
 *
 * Previously, the code used RequireJS modules to dynamically grep for and require
 * tests and factories. However, Browserify does not allow you to have dynamic module
 * dependencies, as it prevents bundling. Thus, I compromised with this file.
 * (It's also less hacky, as now things will be typechecked at bundle-time. :) )
 */
// Install polyfills first.
import * as main from '../../src/main';

import runTests from './setup';
import BackendFactory from './BackendFactory';
// Will be replaced with import statements for FS factories.
/*FACTORY_IMPORTS*/

// Will be replaced with the imported factories.
var backends: BackendFactory[] = [/*FACTORIES*/],
  tests: {
    fs: {
      [name: string]: {[name: string]: () => void};
      all: {[name: string]: () => void};
    };
    general: {[name: string]: () => void};
  } = {/*TESTS*/};

runTests(tests, backends);
